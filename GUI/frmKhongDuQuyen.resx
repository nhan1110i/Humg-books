<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAYABgAAD/7gAOQWRvYmUAZAAAAAAB/+EGEEV4aWYAAE1NACoAAAAIAAcBEgAD
        AAAAAQABAAABGgAFAAAAAQAAAGIBGwAFAAAAAQAAAGoBKAADAAAAAQACAAABMQACAAAAHAAAAHIBMgAC
        AAAAFAAAAI6HaQAEAAAAAQAAAKIAAADCAGAAAAABAAAAYAAAAAEAAEFkb2JlIFBob3Rvc2hvcCBDUzUg
        V2luZG93cwAyMDE3OjExOjI0IDAxOjM3OjE1AAACoAIABAAAAAEAAAAtoAMABAAAAAEAAAAnAAAAAAAA
        AAYBAwADAAAAAQAGAAABGgAFAAAAAQAAARABGwAFAAAAAQAAARgBKAADAAAAAQACAAACAQAEAAAAAQAA
        ASACAgAEAAAAAQAABOcAAAAAAAAASAAAAAEAAABIAAAAAf/Y/+0ADEFkb2JlX0NNAAH/7gAOQWRvYmUA
        ZIAAAAAB/9sAhAAMCAgICQgMCQkMEQsKCxEVDwwMDxUYExMVExMYEQwMDAwMDBEMDAwMDAwMDAwMDAwM
        DAwMDAwMDAwMDAwMDAwMAQ0LCw0ODRAODhAUDg4OFBQODg4OFBEMDAwMDBERDAwMDAwMEQwMDAwMDAwM
        DAwMDAwMDAwMDAwMDAwMDAwMDAz/wAARCAAnAC0DASIAAhEBAxEB/90ABAAD/8QBPwAAAQUBAQEBAQEA
        AAAAAAAAAwABAgQFBgcICQoLAQABBQEBAQEBAQAAAAAAAAABAAIDBAUGBwgJCgsQAAEEAQMCBAIFBwYI
        BQMMMwEAAhEDBCESMQVBUWETInGBMgYUkaGxQiMkFVLBYjM0coLRQwclklPw4fFjczUWorKDJkSTVGRF
        wqN0NhfSVeJl8rOEw9N14/NGJ5SkhbSVxNTk9KW1xdXl9VZmdoaWprbG1ub2N0dXZ3eHl6e3x9fn9xEA
        AgIBAgQEAwQFBgcHBgU1AQACEQMhMRIEQVFhcSITBTKBkRShsUIjwVLR8DMkYuFygpJDUxVjczTxJQYW
        orKDByY1wtJEk1SjF2RFVTZ0ZeLys4TD03Xj80aUpIW0lcTU5PSltcXV5fVWZnaGlqa2xtbm9ic3R1dn
        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
        ZWZlcmVuY2UgVmlld2luZyBDb25kaXRpb24gaW4gSUVDNjE5NjYtMi4xAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAB2aWV3AAAAAAATpP4AFF8uABDPFAAD7cwABBMLAANcngAAAAFYWVogAAAAAABMCVYAUAAA
        AFcf521lYXMAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAKPAAAAAnNpZyAAAAAAQ1JUIGN1cnYAAAAA
        AAAEAAAAAAUACgAPABQAGQAeACMAKAAtADIANwA7AEAARQBKAE8AVABZAF4AYwBoAG0AcgB3AHwAgQCG
        AIsAkACVAJoAnwCkAKkArgCyALcAvADBAMYAywDQANUA2wDgAOUA6wDwAPYA+wEBAQcBDQETARkBHwEl
        ASsBMgE4AT4BRQFMAVIBWQFgAWcBbgF1AXwBgwGLAZIBmgGhAakBsQG5AcEByQHRAdkB4QHpAfIB+gID
        AgwCFAIdAiYCLwI4AkECSwJUAl0CZwJxAnoChAKOApgCogKsArYCwQLLAtUC4ALrAvUDAAMLAxYDIQMt
        AzgDQwNPA1oDZgNyA34DigOWA6IDrgO6A8cD0wPgA+wD+QQGBBMEIAQtBDsESARVBGMEcQR+BIwEmgSo
        BLYExATTBOEE8AT+BQ0FHAUrBToFSQVYBWcFdwWGBZYFpgW1BcUF1QXlBfYGBgYWBicGNwZIBlkGagZ7
        BowGnQavBsAG0QbjBvUHBwcZBysHPQdPB2EHdAeGB5kHrAe/B9IH5Qf4CAsIHwgyCEYIWghuCIIIlgiq
        CL4I0gjnCPsJEAklCToJTwlkCXkJjwmkCboJzwnlCfsKEQonCj0KVApqCoEKmAquCsUK3ArzCwsLIgs5
        C1ELaQuAC5gLsAvIC+EL+QwSDCoMQwxcDHUMjgynDMAM2QzzDQ0NJg1ADVoNdA2ODakNww3eDfgOEw4u
        DkkOZA5/DpsOtg7SDu4PCQ8lD0EPXg96D5YPsw/PD+wQCRAmEEMQYRB+EJsQuRDXEPURExExEU8RbRGM
        EaoRyRHoEgcSJhJFEmQShBKjEsMS4xMDEyMTQxNjE4MTpBPFE+UUBhQnFEkUahSLFK0UzhTwFRIVNBVW
        FXgVmxW9FeAWAxYmFkkWbBaPFrIW1hb6Fx0XQRdlF4kXrhfSF/cYGxhAGGUYihivGNUY+hkgGUUZaxmR
        GbcZ3RoEGioaURp3Gp4axRrsGxQbOxtjG4obshvaHAIcKhxSHHscoxzMHPUdHh1HHXAdmR3DHeweFh5A
        HmoelB6+HukfEx8+H2kflB+/H+ogFSBBIGwgmCDEIPAhHCFIIXUhoSHOIfsiJyJVIoIiryLdIwojOCNm
        I5QjwiPwJB8kTSR8JKsk2iUJJTglaCWXJccl9yYnJlcmhya3JugnGCdJJ3onqyfcKA0oPyhxKKIo1CkG
        KTgpaymdKdAqAio1KmgqmyrPKwIrNitpK50r0SwFLDksbiyiLNctDC1BLXYtqy3hLhYuTC6CLrcu7i8k
        L1ovkS/HL/4wNTBsMKQw2zESMUoxgjG6MfIyKjJjMpsy1DMNM0YzfzO4M/E0KzRlNJ402DUTNU01hzXC
        Nf02NzZyNq426TckN2A3nDfXOBQ4UDiMOMg5BTlCOX85vDn5OjY6dDqyOu87LTtrO6o76DwnPGU8pDzj
        PSI9YT2hPeA+ID5gPqA+4D8hP2E/oj/iQCNAZECmQOdBKUFqQaxB7kIwQnJCtUL3QzpDfUPARANER0SK
        RM5FEkVVRZpF3kYiRmdGq0bwRzVHe0fASAVIS0iRSNdJHUljSalJ8Eo3Sn1KxEsMS1NLmkviTCpMcky6
        TQJNSk2TTdxOJU5uTrdPAE9JT5NP3VAnUHFQu1EGUVBRm1HmUjFSfFLHUxNTX1OqU/ZUQlSPVNtVKFV1
        VcJWD1ZcVqlW91dEV5JX4FgvWH1Yy1kaWWlZuFoHWlZaplr1W0VblVvlXDVchlzWXSddeF3JXhpebF69
        Xw9fYV+zYAVgV2CqYPxhT2GiYfViSWKcYvBjQ2OXY+tkQGSUZOllPWWSZedmPWaSZuhnPWeTZ+loP2iW
        aOxpQ2maafFqSGqfavdrT2una/9sV2yvbQhtYG25bhJua27Ebx5veG/RcCtwhnDgcTpxlXHwcktypnMB
        c11zuHQUdHB0zHUodYV14XY+dpt2+HdWd7N4EXhueMx5KnmJeed6RnqlewR7Y3vCfCF8gXzhfUF9oX4B
        fmJ+wn8jf4R/5YBHgKiBCoFrgc2CMIKSgvSDV4O6hB2EgITjhUeFq4YOhnKG14c7h5+IBIhpiM6JM4mZ
        if6KZIrKizCLlov8jGOMyo0xjZiN/45mjs6PNo+ekAaQbpDWkT+RqJIRknqS45NNk7aUIJSKlPSVX5XJ
        ljSWn5cKl3WX4JhMmLiZJJmQmfyaaJrVm0Kbr5wcnImc951kndKeQJ6unx2fi5/6oGmg2KFHobaiJqKW
        owajdqPmpFakx6U4pammGqaLpv2nbqfgqFKoxKk3qamqHKqPqwKrdavprFys0K1ErbiuLa6hrxavi7AA
        sHWw6rFgsdayS7LCszizrrQltJy1E7WKtgG2ebbwt2i34LhZuNG5SrnCuju6tbsuu6e8IbybvRW9j74K
        voS+/796v/XAcMDswWfB48JfwtvDWMPUxFHEzsVLxcjGRsbDx0HHv8g9yLzJOsm5yjjKt8s2y7bMNcy1
        zTXNtc42zrbPN8+40DnQutE80b7SP9LB00TTxtRJ1MvVTtXR1lXW2Ndc1+DYZNjo2WzZ8dp22vvbgNwF
        3IrdEN2W3hzeot8p36/gNuC94UThzOJT4tvjY+Pr5HPk/OWE5g3mlucf56noMui86Ubp0Opb6uXrcOv7
        7IbtEe2c7ijutO9A78zwWPDl8XLx//KM8xnzp/Q09ML1UPXe9m32+/eK+Bn4qPk4+cf6V/rn+3f8B/yY
        /Sn9uv5L/tz/bf///9sAQwABAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEB
        AgICAgICAgICAgIDAwMDAwMDAwMD/9sAQwEBAQEBAQEBAQEBAgIBAgIDAwMDAwMDAwMDAwMDAwMDAwMD
        AwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMD/8AAEQgAJwAtAwERAAIRAQMRAf/EAB8AAAAGAgMB
        AAAAAAAAAAAAAAcIBgUECQMKAgEAC//EALUQAAIBAwQBAwMCAwMDAgYJdQECAwQRBRIGIQcTIgAIMRRB
        MiMVCVFCFmEkMxdScYEYYpElQ6Gx8CY0cgoZwdE1J+FTNoLxkqJEVHNFRjdHYyhVVlcassLS4vJkg3ST
        hGWjs8PT4yk4ZvN1Kjk6SElKWFlaZ2hpanZ3eHl6hYaHiImKlJWWl5iZmqSlpqeoqaq0tba3uLm6xMXG
        x8jJytTV1tfY2drk5ebn6Onq9PX29/j5+v/EAB8BAAAGAwEBAQAAAAAAAAAAAAYFBAMHAggBCQAKC//E
        ALURAAIBAwIEBAMFBAQEBgYFbQECAxEEIRIFMQYAIhNBUQcyYRRxCEKBI5EVUqFiFjMJsSTB0UNy8Bfh
        gjQlklMYY0TxorImNRlUNkVkJwpzg5NGdMLS4vJVZXVWN4SFo7PD0+PzKRqUpLTE1OT0laW1xdXl9ShH
        V2Y4doaWprbG1ub2Z3eHl6e3x9fn90hYaHiImKi4yNjo+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq
        +v/dAAQABv/aAAwDAQACEQMRAD8A3xvYX6BvXvfuvdajv80f/Tz/ADovnlkv5VXxA7lzXS/Tnwb2i3fH
        y1772xV5eKlj+UFdiayb43dQpW4ObG1FTLtHcKw5CoEFaRDVjJTeIZLblOjOyTyWMMbxQCS6lrpUmg0r
        QsST61VRxoXUkadVDe0WK1h+pnGXIAHy9f8AL9gp59W1fyYvnju35q/Fqt2z31RNtf5qfEreOT+NPzJ2
        JXy0QzGP7a6/lqMKm+pKehWGlbF9nY/GHIialjGPXKpkaSleWKjErekEbCOeBq28g1KaEYPlQ0II9CAR
        wIB6SXtv4EtV/smyP83+ryp1bx7a6R9e9+691//Q3xvYX6BvVX383z+YJS/y5PhZvnuDb9Ad0d875raL
        pr4tddUuMqM9k9+/IHf8NXQbJoqfb1F/lmcx22/FNma+ljMclZSY9qSF/uqmnR3oUVmLSOFhUVYkgAAc
        SScAepOAM9KbS3NxMq/gGT9n+z1qj/MH5M/LH/hNN8Mvh11P1Fitg7m+Y3zm3J278ofm/wDILtSiq+xs
        luLt+lqNi1e4tj4+FsxSx5KPDPvuLHz5SSYx1Bo5qynhjqslUzIzZwvuV1d3MxaIlU00C1EdX0IdSmhA
        1M4IJ1yFVbSgqbqkN9JIWzCnao4D5nHr5fIZHRuMl8j97/HPc/wD/wCFG1JsSTYHRnzm6p606L/mz9Yb
        RGUq9s4I5yqi2x1F8psRhlir6yVNu56hggM9Q1TXDFLQ4un1VOYrKlqWbaZZ9vcjQ8snhnH9ohYOvHGt
        VMoAHxeMWbKjptollSax1VkjypPpQGn5Vp9lMY63NMbksdmcdQZfEV1HlMTlaKlyWMyePqYaygyOOroI
        6qirqGsp3kp6qjq6aVZIpEZkdGDKSCD7cIIJB49EZBBIIz1N96691//R3xWZUVndlREUszMQqqqi7MzG
        wCgC5J9hfoG9aqvxXK/zrf5u+8/nblW/vD/L5/lfZvK9LfCmkljpavaXcvygqPtKzsXv3HyCStpstjtr
        +CkqsZUIVR4k2zVwGKogyEb2uwNKbeDk0eXjwr2JXA7iCWFT2qVZdMgPRtJ/iNoIh/uRJx+Q/wBWP2kc
        OiY/8LZ+vo8h8dfg12qKe820u6e0Ovmq7n9uLsPY2G3GtORqsfM/WJYcH9B5/qp28n60qOBhYn/asgH7
        NZ/b+y20tmdfs/y9bGvw9+KHWnZH8nj4v/EHuPbkW6Ot98/BDpjrbsHBVCilmq6fcfT+3BmaqjqIkSbF
        52gytW1XRVkWipo66KOojZZo1YFrJ40UhRyjO5kU8SrFzIpzUHS1DQgqaUIIqOkc0zR30kq/Ern+WP5j
        oj38jzvHsXovcfev8lr5S5yqyXffwBeGb4/7zy8LUTd9/B7M1VNH1JvXALLPMK1+uKLJ0OFroqe9Pi6W
        px2P1y1NHWsiwyC5iW6AAkrpkUGumQcR5Gh+JSQNSlWpRh07fRKwS7i/s34/b/q4/MdbEvtrou6//9K7
        7+fb8v8AtDavW/Uf8tj4h1v3Hzf/AJle4qnpfZH2FVWw1vVfSFYpou4+48vVYqkrq7b+Po9vzTUMNbaG
        ampDk8nSO0uGkUB1Gjt4pbyYExR0wOLMSAqitBVmIAqQKkVI6DthAru08n9kmfz4/wAuP7OrX/hH8Res
        fgl8V+l/il1HTsNndQbPpMCcvUU9PTZTd+5amSbK7y31nUpVSD+O713VXVmTqwgEcctSY4wsaIoSxq41
        ySkGd2LORw1HyHnpUURK1IRVBJp0luJmnleQ8DwHoPIf6vPqmX/hTPuH+WvN8O+putv5jW/+89n4Xcve
        OL3n1BjvjXjNsZruHL7m2PgMtht1V9BjN7RnZ/8AdPE7V3/JDkZ66SPwzV9L4fJMyRO9C063KfSJWcKa
        1FRpqKgnUtKkCmakgkAhWos21Z9cjwhaUoakgZ4cK+n+rHV4nxT7R6U7p+NnR3aHxxz8O5+it29Z7TrO
        rMxDDVUry7PpMTT4vF0VdQ10FLkMZl8OlCaOupKiKKppKynlhlRJI2UMw4jVaNVaqa0rVTpNaY4g5XtP
        FSQQekVwsizSiUfqVqfzz1TR/PR+PPZ3XlP0r/OA+JGDNd8rf5dFdPuPe+26HxUzd8fD6vkq/wDTX1Tu
        ScU80tRQ7dwOUyGWpZCssmPoajLSUkT18lKyWiYQXILk/TTURxkgMcRyACua0jbAqCrOwSLpbYyI4ks5
        fgfh8j/s+XzHz6s0/wCHEPi9/sg3/Dkn9+YP9lk/0Lf6bP4/rov4v/Dfs9P9yP4f974f9JX96/8Aft/w
        fzef+8f+Qf57j2o8F/G8GnfWn+z9nn0k+nk8f6enfWn+z9lM9f/TDnpb+Y13v0d/Ou+Y/fny+/lm/Mru
        35ub5wlb1x8TeietttLnMx0x8Rdo5/ceOqcnsHbTw5av3pjtzJt2J6jdmAp5MLWzNmKimnEWSqY/ZBd2
        7P8ARGKeLwErQM2nVIQc1CkkhNdFrwJJBKqVLGhjeySOK4VYhxPr9pqKZ/ydXdf8P5/J/wD70Gfzbf8A
        0RW5/wD7D/bX09x/Hb/85D/1r6Q/RQf8p0f8v8/VNH84/wDmk/Ef5a9d9R7E/mc/ye/5j/QEWG3JuLcH
        SW+921m3/j9vcVkVNg6ff2J2Xl+yNux4rcmGyFHLi1zNJ9pWJERRy/szLBINxW14JxJBNCJVUghZCaqf
        4gYzwIqpwQQRWhYFZaW7xazBdIymlcVHy4N9vVg3xA/niVXX/wAZeltjfDz+Q9/MxzPxm2hsjH7b6fy/
        WXXWX7B2XlNr4aWooGyGL31i8HnKXd9VWZSCokr8k1ZUz1mQaeWeR52kYtrbXC6h4sBbUxJMhrqLEtWk
        dAdVcAADgAAKdMT2ivK7TXqCQ8a4+zFfTowWU/n5/I3+GZH+M/yDP5r/APB/sav+K/xPorcAxv8ADft5
        Pvv4garZ/wBsKH7XV5fJ+3476uL+9S27mKQTvbeDpOqshpppmtY6Upxr5dNrZRal0Xyaq4pxr8s9ai2J
        +R2Zf4m7+oq34h/LCf8AkVwfzPuovkrtrBnN42hoMZtOr233cN8fExN+z1S7L3R1DnO5qLbysKWdocDV
        45TUzrn8vSSuYfTXf0gh+qX95+EV1VNaVA1VpXxNGdWnT4mdGnt6NSqeOG1r9T4ZH+DNPSv8uv/Z
</value>
  </data>
</root>